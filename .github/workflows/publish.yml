name: Publish Package

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Extract version from tag
      id: extract_version
      run: |
        if [[ "${{ github.ref }}" =~ ^refs/tags/v(.+)$ ]]; then
          echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
        else
          # Get the latest tag and increment patch version
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          if [[ "$LATEST_TAG" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=$((BASH_REMATCH[3] + 1))
            echo "version=${MAJOR}.${MINOR}.${PATCH}" >> $GITHUB_OUTPUT
          else
            echo "version=1.0.0" >> $GITHUB_OUTPUT
          fi
        fi
      
    - name: Build release AAR
      run: ./gradlew assembleRelease
      env:
        RELEASE_VERSION: ${{ steps.extract_version.outputs.version }}
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Check if version already exists
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        echo "Checking if version $VERSION already exists..."
        
        # Check if any of the packages already exist
        for module in blaink blaink-core blaink-push; do
          URL="https://maven.pkg.github.com/Rashidium/blaink-android/com/blaink/$module/$VERSION/$module-$VERSION.aar"
          if curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$URL" | grep -q "200"; then
            echo "ERROR: Version $VERSION for $module already exists in GitHub Packages!"
            echo "Please use a different version number or delete the existing version."
            exit 1
          fi
        done
        echo "Version $VERSION is available for publishing."
      
    - name: Publish to GitHub Packages
      run: ./gradlew publish
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_VERSION: ${{ steps.extract_version.outputs.version }}